#!/usr/bin/env ruby
require 'fileutils'
require 'open-uri'

PATH = FileUtils.pwd
unless pathmatch = PATH.match(/^(\/Users\/[^\/]*)\//)
  raise ArgumentError, "you must clone the git repo to some location under your home directory"
end
HOME = pathmatch[1]
TRASH = "#{HOME}/.Trash/dotfiles-#{Time.now.to_i}"
FileUtils.mkdir(TRASH)

def move_to_trash(object)
  trash_to = File.join(TRASH, File.basename(object))
  if File.exists?(object) && File.symlink?(object)
    target = File.readlink(object)
    return if block_given? && yield(target)
    FileUtils.mv(target, trash_to) if File.exists?(target)
  elsif File.exists?(object)
    FileUtils.mv(object, trash_to)
  end
  FileUtils.rm_f(object) # delete file, symlink or dead symlink
end

puts "Symlinking config files (deleting old ones!)"
%w{zshrc zlogin vimrc gvimrc gitconfig ackrc gemrc rvmrc rdebugrc}.each do |dotfile|
  source = File.join(PATH, dotfile)
  dest = File.join(HOME, ".#{dotfile}")
  move_to_trash(dest) { |symlink_target| symlink_target == source }
  FileUtils.ln_s(source, dest) unless File.exists?(dest)
end

puts "trashing old .vim directory and creating a new one"
move_to_trash File.join(HOME, '.vim')
FileUtils.mkdir "#{HOME}/.vim"
FileUtils.mkdir "#{HOME}/.vim/bundle"
FileUtils.cd "#{HOME}/.vim/bundle"

puts "symlinking pathogen"
FileUtils.ln_s "#{PATH}/vim/autoload", "#{HOME}/.vim/autoload"

# thanks, tammer: http://tammersaleh.com/posts/the-modern-vim-config-with-pathogen

git_bundles = [
  "git://github.com/tpope/vim-cucumber.git",
  "git://github.com/tpope/vim-fugitive.git",
  "git://github.com/tpope/vim-rails.git",
  "git://github.com/tpope/vim-repeat.git",
  "git://github.com/tpope/vim-surround.git",
  "git://github.com/tpope/vim-vividchalk.git",
  "git://github.com/tsaleh/vim-supertab.git",
  "git://github.com/tsaleh/vim-tcomment.git",
  "git://github.com/godlygeek/tabular.git",
  "git://github.com/mileszs/ack.vim.git",
  "git://github.com/vim-scripts/bufkill.vim.git",
  "git://github.com/scrooloose/nerdtree",
  "git://github.com/michaeljsmith/vim-indent-object.git",
]

peepopen = "git://github.com/topfunky/PeepOpen-EditorSupport.git"

vim_org_scripts = [
  ["IndexedSearch", "7062",  "plugin"],
  ["gist",          "15897", "plugin"],
  ["jquery",        "15752", "syntax"],
  ["autoclose",     "9223",  "plugin"]
]

git_bundles.each do |url|
  dir = url.split('/').last.sub(/\\\\.git$/, '')
  puts "\nUnpacking #{url} into #{dir}"
  `git clone #{url} #{dir}`
  FileUtils.rm_rf(File.join(dir, ".git"))
end

puts "\nUnpacking #{peepopen} into vim-peepopen"
tmpfolder = "/tmp/vim-peepopen-#{Time.now.to_i}"
`git clone #{peepopen} #{tmpfolder}`
FileUtils.mv("#{tmpfolder}/vim-peepopen/",'vim-peepopen/')
FileUtils.rm('vim-peepopen/README.md')

vim_org_scripts.each do |name, script_id, script_type|
  puts "  Downloading #{name}"
  local_file = File.join(name, script_type, "#{name}.vim")
  FileUtils.mkdir_p(File.dirname(local_file))
  File.open(local_file, "w") do |file|
    file << open("http://www.vim.org/scripts/download_script.php?src_id=#{script_id}").read
  end
end
